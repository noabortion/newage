{"version":3,"file":"component---src-pages-index-jsx-5855d5b70cd1c6473cd4.js","mappings":"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","sources":["webpack://peligro-nueva-era/./node_modules/url-join/lib/url-join.js","webpack://peligro-nueva-era/./src/components/MainContainer/MainContainer.jsx","webpack://peligro-nueva-era/./src/components/PostListing/Thumbnail.jsx","webpack://peligro-nueva-era/./src/components/PostListing/PostInfo.jsx","webpack://peligro-nueva-era/./src/components/PostListing/Article.jsx","webpack://peligro-nueva-era/./src/components/PostListing/PostListing.jsx","webpack://peligro-nueva-era/./src/components/Post/PostDate.jsx","webpack://peligro-nueva-era/./src/components/SEO/SEO.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetContainer.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetTitle.jsx","webpack://peligro-nueva-era/./src/components/Tag/Tag.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetCategory.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetTag.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetLinks.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetSearch.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/Sidebar.jsx","webpack://peligro-nueva-era/./src/pages/index.jsx"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","import React from \"react\";\r\nimport \"./MainContainer.scss\";\r\n\r\nconst MainContainer = ({ content, sidebar }) => (\r\n  <section className=\"main-container container\">\r\n    <div className=\"content-wrapper padding-top-half padding-bottom-2\">\r\n      {content}\r\n    </div>\r\n    <div className=\"sidebar-wrapper padding-top-half padding-bottom-2\">\r\n      {sidebar}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\n\r\nconst Thumbnail = ({ post, extraClass = \"\" }) => {\r\n  const thumbnail = post.cover ? (\r\n    <AutoLink\r\n      to={post.slug}\r\n      key={post.title}\r\n      className={`thumbnail-wrapper line-height-reset ${extraClass}`}\r\n    >\r\n      <GatsbyImage image={getImage(post.cover)} className=\"thumbnail-img\" alt=\"\" />\r\n    </AutoLink>\r\n  ) : null;\r\n\r\n  return thumbnail;\r\n};\r\n\r\nexport default Thumbnail;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport PostDate from \"../Post/PostDate\";\r\n\r\nconst PostInfo = ({ post, extraClass = \"\" }) => (\r\n  <div className={`post-info-wrapper ${extraClass}`}>\r\n    <AutoLink to={post.slug} key={post.title}>\r\n      <h2>\r\n        <small>{post.title}</small>\r\n      </h2>\r\n    </AutoLink>\r\n    <div className=\"margin-bottom-half\"> {post.excerpt}</div>\r\n    <small>\r\n      <PostDate date={post.date} />\r\n    </small>\r\n  </div>\r\n);\r\n\r\nexport default PostInfo;\r\n","import React from \"react\";\r\nimport Thumbnail from \"./Thumbnail\";\r\nimport PostInfo from \"./PostInfo\";\r\nimport \"./Article.scss\";\r\n\r\nconst Article = ({ post, hasThumbnail }) => (\r\n  <article\r\n    key={post.title}\r\n    className=\"article-container padding-bottom-2 padding-top-2 border-bottom border-color-light-grey\"\r\n  >\r\n    {hasThumbnail && <Thumbnail post={post} />}\r\n    <PostInfo post={post} />\r\n  </article>\r\n);\r\n\r\nexport default Article;\r\n","import React, { Component } from \"react\";\r\nimport Article from \"./Article\";\r\nclass PostListing extends Component {\r\n  state = {\r\n    maxPosts:\r\n      this.props.hasLoadmore && this.props.postsPerPage\r\n        ? this.props.postsPerPage\r\n        : this.props.postList.length,\r\n  };\r\n\r\n  handleLoadmore = () => {\r\n    const { hasLoadmore = false, numberLoadmore } = this.props;\r\n\r\n    if (!hasLoadmore) return;\r\n\r\n    this.setState((prevState) => ({\r\n      maxPosts: prevState.maxPosts + numberLoadmore,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { postList, hasThumbnail = true, hasLoadmore = false } = this.props;\r\n    const { maxPosts } = this.state;\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"post-listing-container\">\r\n          {postList.map((post, index) => {\r\n            if (index < maxPosts)\r\n              return (\r\n                <Article\r\n                  key={post.title}\r\n                  post={post}\r\n                  hasThumbnail={hasThumbnail}\r\n                />\r\n              );\r\n\r\n            return null;\r\n          })}\r\n        </div>\r\n        {hasLoadmore && maxPosts < postList.length && (\r\n          <div className=\"loadmore-wrapper margin-top padding-top-half text-center\">\r\n            <button className=\"btn-primary\" onClick={this.handleLoadmore}>\r\n              {this.props.btnLoadmore}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n","import React from \"react\";\r\nimport { formatDate } from \"../../utils/helpers\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst PostDate = ({ date, extraClass = \"\" }) => (\r\n  <div className={`text-description ${extraClass}`}>\r\n    {config.postOnDate} {formatDate(date)}\r\n  </div>\r\n);\r\n\r\nexport default PostDate;\r\n","import React, { Component } from \"react\";\r\nimport { getSrc } from \"gatsby-plugin-image\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let keywords;\r\n    let image = \"\";\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n\r\n      keywords = postMeta.keywords;\r\n\r\n      if (postMeta.cover) {\r\n        image = getSrc(postMeta.cover);\r\n      }\r\n\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n      },\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image,\r\n          },\r\n          description,\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n        {keywords && <meta name=\"keywords\" content={keywords} />}\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n","import React from \"react\";\r\n\r\nconst WidgetContainer = ({ extraClass = \"\", children }) => (\r\n  <aside className={`${extraClass} padding-top padding-bottom`}>\r\n    {children}\r\n  </aside>\r\n);\r\n\r\nexport default WidgetContainer;\r\n","import React from \"react\";\r\n\r\nconst WidgetTitle = ({ title }) => (\r\n  <h3 className=\"text-uppercase\">\r\n    <small>{title}</small>\r\n  </h3>\r\n);\r\n\r\nexport default WidgetTitle;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport { getTagPath } from \"../../utils/helpers\";\r\n\r\nconst Tag = ({ content }) => (\r\n  <AutoLink\r\n    key={content}\r\n    to={getTagPath(content)}\r\n    className=\"inline-block small-text \r\n      border border-color-light-grey padding-left-half padding-right-half\"\r\n  >\r\n    <span>{content}</span>\r\n  </AutoLink>\r\n);\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport { getCategoryPath } from \"../../utils/helpers\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport Tag from \"../Tag/Tag\";\r\n\r\nconst WidgetCategory = ({ categoryList }) => (\r\n  <WidgetContainer extraClass=\"categories-container\">\r\n    <WidgetTitle title={config.categoryWidgetTitle} />\r\n    <div>\r\n      {categoryList.map((category) => (\r\n        <AutoLink\r\n          key={category}\r\n          to={getCategoryPath(category)}\r\n          className=\"small-text border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\r\n        >\r\n        {category + ' | '}\r\n        </AutoLink>\r\n      ))}\r\n    </div>\r\n  </WidgetContainer>\r\n);\r\n\r\nexport default WidgetCategory;\r\n","import React from \"react\";\r\nimport Tag from \"../Tag/Tag\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst WidgetTag = ({ tagList }) => (\r\n  <WidgetContainer extraClass=\"categories-container\">\r\n    <WidgetTitle title={config.tagWidgetTitle} />\r\n    <div>\r\n      {tagList.map((tag) => (\r\n        <Tag key={tag} content={tag} />\r\n      ))}\r\n    </div>\r\n  </WidgetContainer>\r\n);\r\n\r\nexport default WidgetTag;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport { getPostList } from \"../../utils/helpers\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\r\n  const postList = getPostList(latestPostEdges);\r\n\r\n  return (\r\n    <WidgetContainer extraClass=\"latest-posts-container\">\r\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\r\n      <div>\r\n        {postList.map((post) => (\r\n          <AutoLink\r\n            key={post.title}\r\n            to={post.slug}\r\n            className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\r\n          >\r\n            <span>{post.title}</span>\r\n          </AutoLink>\r\n        ))}\r\n      </div>\r\n    </WidgetContainer>\r\n  );\r\n};\r\n\r\nexport default WidgetLatesPosts;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst WidgetLinks = ({ links }) => (\r\n  <>\r\n    {links && links.length > 0 && (\r\n      <WidgetContainer extraClass=\"categories-container\">\r\n        <WidgetTitle title={config.linksWidgetTitle} />\r\n        <div>\r\n          {links.map((link) => (\r\n            <AutoLink\r\n              key={link.label}\r\n              to={link.url}\r\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\r\n            >\r\n              <span>{link.label}</span>\r\n            </AutoLink>\r\n          ))}\r\n        </div>\r\n      </WidgetContainer>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default WidgetLinks;\r\n","import React, { Component } from \"react\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass WidgetSearch extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {config.hasSearch && (\r\n          <WidgetContainer extraClass=\"search-container\">\r\n            <WidgetTitle title={config.searchWidgetTitle} />\r\n            <form className=\"margin-bottom-none\" action=\"/search/\" method=\"get\">\r\n              <div className=\"container-full row padding-none margin-bottom-none\">\r\n                <div className=\"padding-none padding-right-half col-xs-10\">\r\n                  <input\r\n                    className=\"margin-bottom-none\"\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    placeholder={config.searchWidgetPlaceHolder}\r\n                    required\r\n                    spellCheck=\"false\"\r\n                  />\r\n                </div>\r\n                <div className=\"padding-none padding-left-half col-xs-2\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    <FontAwesomeIcon\r\n                      icon={[\"fas\", \"search\"]}\r\n                      style={{ color: \"#FFFFFF\" }}\r\n                    />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </WidgetContainer>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WidgetSearch;\r\n","import React from \"react\";\r\nimport WidgetCategory from \"./WidgetCategory\";\r\nimport WidgetTag from \"./WidgetTag\";\r\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\r\nimport WidgetLinks from \"./WidgetLinks\";\r\nimport WidgetSearch from \"./WidgetSearch\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\r\n  return (\r\n    <aside\r\n      className={`sidebar-container width-full ${\r\n        config.sidebarSticky ? \"height-full\" : \"\"\r\n      }`}\r\n    >\r\n      <WidgetSearch />\r\n\r\n      {latestPostEdges && (\r\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\r\n      )}\r\n\r\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\r\n\r\n      {tagList && <WidgetTag tagList={tagList} />}\r\n\r\n      {links && (\r\n        <div className=\"position-sticky top-zero\">\r\n          <WidgetLinks links={links} />\r\n        </div>\r\n      )}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport Header from \"../components/Header/Header\";\r\nimport MainContainer from \"../components/MainContainer/MainContainer\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport { getPostList, getTagCategoryList } from \"../utils/helpers\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    const postList = getPostList(postEdges);\r\n    const { tagList, categoryList } = getTagCategoryList(postList);\r\n    const content = (\r\n      <PostListing\r\n        postList={postList}\r\n        hasThumbnail={config.homeHasThumbnail}\r\n        hasLoadmore={config.homeHasLoadmore}\r\n        postsPerPage={config.postsPerPage}\r\n        numberLoadmore={config.numberLoadmore}\r\n        btnLoadmore={config.btnLoadmore}\r\n      />\r\n    );\r\n    const sidebar = (\r\n      <Sidebar\r\n        tagList={tagList}\r\n        categoryList={categoryList}\r\n        links={config.sidebarLinks}\r\n      />\r\n    );\r\n\r\n    const headerTitle = config.homeHeader\r\n      ? `${config.siteTitle} - ${config.homeHeader}`\r\n      : `${config.siteTitle}`;\r\n\r\n    return (\r\n      <Layout>\r\n        <div className=\"index-container\">\r\n          <Helmet title={config.siteTitle} />\r\n          <SEO />\r\n          <Header title={headerTitle} />\r\n          <MainContainer content={content} sidebar={sidebar} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`query IndexQuery {\r\n  allMarkdownRemark(\r\n    limit: 2000\r\n    sort: {fields: [frontmatter___date], order: DESC}\r\n    filter: {frontmatter: {template: {eq: \"post\"}}}\r\n  ) {\r\n    edges {\r\n      node {\r\n        fields {\r\n          slug\r\n          date\r\n        }\r\n        excerpt\r\n        timeToRead\r\n        frontmatter {\r\n          title\r\n          tags\r\n          categories\r\n          date\r\n          cover {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n"],"names":["normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","definition","content","sidebar","className","post","extraClass","cover","AutoLink","to","slug","key","title","G","image","getImage","alt","excerpt","PostDate","date","hasThumbnail","PostListing","state","maxPosts","props","hasLoadmore","postsPerPage","postList","handleLoadmore","numberLoadmore","setState","prevState","render","this","map","index","onClick","btnLoadmore","Component","config","formatDate","SEO","description","keywords","postURL","postNode","postPath","postSEO","postMeta","frontmatter","getSrc","urljoin","blogURL","schemaOrgJSONLD","url","name","alternateName","itemListElement","position","item","headline","type","JSON","stringify","property","children","getTagPath","categoryList","category","getCategoryPath","tagList","tag","latestPostEdges","getPostList","links","link","label","WidgetSearch","action","method","placeholder","required","spellCheck","icon","style","color","WidgetLatestPosts","Index","postEdges","data","allMarkdownRemark","edges","getTagCategoryList","headerTitle","React"],"sourceRoot":""}