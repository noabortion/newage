{"version":3,"file":"component---src-templates-category-template-jsx-8ca5b4a1fdc433db2e31.js","mappings":"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","sources":["webpack://peligro-nueva-era/./src/components/MainContainer/MainContainer.jsx","webpack://peligro-nueva-era/./src/components/Pagination/PaginationItem.jsx","webpack://peligro-nueva-era/./src/components/Pagination/Pagination.jsx","webpack://peligro-nueva-era/./src/components/PostListing/Thumbnail.jsx","webpack://peligro-nueva-era/./src/components/PostListing/PostInfo.jsx","webpack://peligro-nueva-era/./src/components/PostListing/Article.jsx","webpack://peligro-nueva-era/./src/components/PostListing/PostListing.jsx","webpack://peligro-nueva-era/./src/components/Post/PostDate.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetContainer.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetTitle.jsx","webpack://peligro-nueva-era/./src/components/Tag/Tag.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetCategory.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetTag.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetLinks.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/WidgetSearch.jsx","webpack://peligro-nueva-era/./src/components/Sidebar/Sidebar.jsx","webpack://peligro-nueva-era/./src/templates/category-template.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./MainContainer.scss\";\r\n\r\nconst MainContainer = ({ content, sidebar }) => (\r\n  <section className=\"main-container container\">\r\n    <div className=\"content-wrapper padding-top-half padding-bottom-1\">\r\n      {content}\r\n    </div>\r\n    <div className=\"sidebar-wrapper padding-top-half padding-bottom-2\">\r\n      {sidebar}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\n\r\nconst PaginationItem = (props) => {\r\n  const { value, index, currentPage, pathPrefix, pathPrefixPagination } = props;\r\n  const isLeft = value === 0 && index < currentPage / 2;\r\n  const isRight = value === 0 && index > currentPage / 2;\r\n\r\n  let to = pathPrefix;\r\n\r\n  if (isLeft) {\r\n    to += `${pathPrefixPagination}/${currentPage - 3}`;\r\n  } else if (isRight) {\r\n    to += `${pathPrefixPagination}/${currentPage + 3}`;\r\n  } else if (value !== 1) {\r\n    to += `${pathPrefixPagination}/${value}`;\r\n  }\r\n\r\n  return (\r\n    <AutoLink\r\n      to={to}\r\n      className={`pagination-item ${currentPage === value ? \"active\" : \"\"}`}\r\n      activeClassName=\"active\"\r\n    >\r\n      {isLeft && (\r\n        <FontAwesomeIcon icon={[\"fas\", \"angle-double-left\"]} size=\"xs\" />\r\n      )}\r\n\r\n      {value != 0 && value}\r\n\r\n      {isRight && (\r\n        <FontAwesomeIcon icon={[\"fas\", \"angle-double-right\"]} size=\"xs\" />\r\n      )}\r\n    </AutoLink>\r\n  );\r\n};\r\n\r\nexport default PaginationItem;\r\n","import React from \"react\";\r\nimport PaginationItem from \"./PaginationItem\";\r\nimport \"./Pagination.scss\";\r\n\r\n// condition: totalPages >= 2\r\nconst MAX_PAGINATION_ITEMS = 7;\r\n\r\n// For example: there is 9 pages\r\n// [1], 2, 3, 4, 5, 0, 9\r\n// 1, [2], 3, 4, 5, 0, 9\r\n// 1, 2, [3], 4, 5, 0, 9\r\n// 1, 2, 3, [4], 5, 0, 9\r\n// 1, 0, 4, [5], 6, 0, 9\r\n// 1, 0, 5, [6], 7, 8, 9\r\n// 1, 0, 5, 6, [7], 8, 9\r\n// 1, 0, 5, 6, 7, [8], 9\r\n// 1, 0, 5, 6, 7, 8, [9]\r\nconst Pagination = (props) => {\r\n  const {\r\n    currentPage,\r\n    totalPages,\r\n    pathPrefix,\r\n    pathPrefixPagination,\r\n    extraClass,\r\n  } = props;\r\n\r\n  const respArr = [];\r\n  if (totalPages <= MAX_PAGINATION_ITEMS) {\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      respArr.push(i);\r\n    }\r\n  } else if (currentPage <= 4) {\r\n    for (let i = 1; i <= MAX_PAGINATION_ITEMS - 2; i++) {\r\n      respArr.push(i);\r\n    }\r\n    respArr.push(0, totalPages);\r\n  } else if (totalPages - currentPage < 4) {\r\n    respArr.push(1, 0);\r\n    for (let i = totalPages - 4; i <= totalPages; i++) {\r\n      respArr.push(i);\r\n    }\r\n  } else {\r\n    respArr.push(\r\n      1,\r\n      0,\r\n      currentPage - 1,\r\n      currentPage,\r\n      currentPage + 1,\r\n      0,\r\n      totalPages\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {totalPages >= 2 && (\r\n        <div className={`pagination-container ${extraClass}`}>\r\n          {respArr.map((value, index) => (\r\n            <PaginationItem\r\n              key={`${pathPrefix}-${index}`}\r\n              value={value}\r\n              index={index}\r\n              currentPage={currentPage}\r\n              pathPrefix={pathPrefix}\r\n              pathPrefixPagination={pathPrefixPagination}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\n\r\nconst Thumbnail = ({ post, extraClass = \"\" }) => {\r\n  const thumbnail = post.cover ? (\r\n    <AutoLink\r\n      to={post.slug}\r\n      key={post.title}\r\n      className={`thumbnail-wrapper line-height-reset ${extraClass}`}\r\n    >\r\n\r\n      <GatsbyImage image={getImage(post.cover)} className=\"thumbnail-img\" alt=\"\" />\r\n    \r\n    </AutoLink>\r\n  ) : null;\r\n\r\n  return thumbnail;\r\n};\r\n\r\nexport default Thumbnail;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport PostDate from \"../Post/PostDate\";\r\n\r\nconst PostInfo = ({ post, extraClass = \"\" }) => (\r\n  <div className={`post-info-wrapper ${extraClass}`}>\r\n    <AutoLink to={post.slug} key={post.title}>\r\n      <h5>\r\n        <small>{post.title}</small>\r\n      </h5>\r\n    </AutoLink>\r\n    <small>\r\n      <div className=\"margin-bottom-half\"> {post.excerpt.substring(0,70)+'...'}</div>\r\n      <PostDate date={post.date} />\r\n    </small>\r\n  </div>\r\n);\r\n\r\nexport default PostInfo;\r\n","import React from \"react\";\r\nimport Thumbnail from \"./Thumbnail\";\r\nimport PostInfo from \"./PostInfo\";\r\nimport \"./Article.scss\";\r\n\r\nconst Article = ({ post, hasThumbnail }) => (\r\n  <article key={post.title}\r\n    className=\"article-container padding-bottom-2 padding-top-1 border-bottom border-color-light-grey\"\r\n  >\r\n    {hasThumbnail && <Thumbnail post={post} />} \r\n    <div> <PostInfo post={post} /> </div>\r\n   </article>\r\n);\r\n\r\nexport default Article;\r\n","import React, { Component } from \"react\";\r\nimport Article from \"./Article\";\r\nimport \"./PostListing.scss\";\r\nclass PostListing extends Component {\r\n  state = {\r\n    maxPosts:\r\n      this.props.hasLoadmore && this.props.postsPerPage\r\n        ? this.props.postsPerPage\r\n        : this.props.postList.length,\r\n  };\r\n\r\n  handleLoadmore = () => {\r\n    const { hasLoadmore = false, numberLoadmore } = this.props;\r\n\r\n    if (!hasLoadmore) return;\r\n\r\n    this.setState((prevState) => ({\r\n      maxPosts: prevState.maxPosts + numberLoadmore,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { postList, hasThumbnail = true, hasLoadmore = false } = this.props;\r\n    const { maxPosts } = this.state;\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"post-listing-container\">\r\n          {postList.map((post, index) => {\r\n            if (index < maxPosts)\r\n              return (\r\n                <Article key={post.title}\r\n                  post={post}\r\n                  hasThumbnail={hasThumbnail}\r\n                />\r\n              );\r\n\r\n            return null;\r\n          })}\r\n        </div>\r\n        {hasLoadmore && maxPosts < postList.length && (\r\n          <div className=\"loadmore-wrapper margin-top padding-top-half text-center\">\r\n            <button className=\"btn-primary\" onClick={this.handleLoadmore}>\r\n              {this.props.btnLoadmore}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n","import React from \"react\";\r\nimport { formatDate } from \"../../utils/helpers\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst PostDate = ({ date, extraClass = \"\" }) => (\r\n  <div className={`text-description ${extraClass}`}>\r\n    {config.postOnDate} {formatDate(date)}\r\n  </div>\r\n);\r\n\r\nexport default PostDate;\r\n","import React from \"react\";\r\n\r\nconst WidgetContainer = ({ extraClass = \"\", children }) => (\r\n  <aside className={`${extraClass} padding-top padding-bottom`}>\r\n    {children}\r\n  </aside>\r\n);\r\n\r\nexport default WidgetContainer;\r\n","import React from \"react\";\r\n\r\nconst WidgetTitle = ({ title }) => (\r\n  <h3 className=\"text-uppercase\">\r\n    <small>{title}</small>\r\n  </h3>\r\n);\r\n\r\nexport default WidgetTitle;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport { getTagPath } from \"../../utils/helpers\";\r\n\r\nconst Tag = ({ content }) => (\r\n  <AutoLink\r\n    key={content}\r\n    to={getTagPath(content)}\r\n    className=\"inline-block small-text \r\n      border border-color-light-grey padding-left-half padding-right-half\"\r\n  >\r\n    <span>{content}</span>\r\n  </AutoLink>\r\n);\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport { getCategoryPath } from \"../../utils/helpers\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport Tag from \"../Tag/Tag\";\r\n\r\nconst WidgetCategory = ({ categoryList }) => (\r\n  <WidgetContainer extraClass=\"categories-container\">\r\n    <WidgetTitle title={config.categoryWidgetTitle} />\r\n    <div>\r\n      {categoryList.map((category) => (\r\n        <AutoLink\r\n          key={category}\r\n          to={getCategoryPath(category)}\r\n          className=\"small-text border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\r\n        >\r\n        {category + ' | '}\r\n        </AutoLink>\r\n      ))}\r\n    </div>\r\n  </WidgetContainer>\r\n);\r\n\r\nexport default WidgetCategory;\r\n","import React from \"react\";\r\nimport Tag from \"../Tag/Tag\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst WidgetTag = ({ tagList }) => (\r\n  <WidgetContainer extraClass=\"categories-container\">\r\n    <WidgetTitle title={config.tagWidgetTitle} />\r\n    <div>\r\n      {tagList.map((tag) => (\r\n        <Tag key={tag} content={tag} />\r\n      ))}\r\n    </div>\r\n  </WidgetContainer>\r\n);\r\n\r\nexport default WidgetTag;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport { getPostList } from \"../../utils/helpers\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\r\n  const postList = getPostList(latestPostEdges);\r\n\r\n  return (\r\n    <WidgetContainer extraClass=\"latest-posts-container\">\r\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\r\n      <div>\r\n        {postList.map((post) => (\r\n          <AutoLink\r\n            key={post.title}\r\n            to={post.slug}\r\n            className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\r\n          >\r\n            <span>{post.title}</span>\r\n          </AutoLink>\r\n        ))}\r\n      </div>\r\n    </WidgetContainer>\r\n  );\r\n};\r\n\r\nexport default WidgetLatesPosts;\r\n","import React from \"react\";\r\nimport AutoLink from \"../AutoLink/AutoLink\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst WidgetLinks = ({ links }) => (\r\n  <>\r\n    {links && links.length > 0 && (\r\n      <WidgetContainer extraClass=\"categories-container\">\r\n        <WidgetTitle title={config.linksWidgetTitle} />\r\n        <div>\r\n          {links.map((link) => (\r\n            <AutoLink\r\n              key={link.label}\r\n              to={link.url}\r\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\r\n            >\r\n              <span>{link.label}</span>\r\n            </AutoLink>\r\n          ))}\r\n        </div>\r\n      </WidgetContainer>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default WidgetLinks;\r\n","import React, { Component } from \"react\";\r\nimport WidgetContainer from \"./WidgetContainer\";\r\nimport WidgetTitle from \"./WidgetTitle\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass WidgetSearch extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {config.hasSearch && (\r\n          <WidgetContainer extraClass=\"search-container\">\r\n            <WidgetTitle title={config.searchWidgetTitle} />\r\n            <form className=\"margin-bottom-none\" action=\"/search/\" method=\"get\">\r\n              <div className=\"container-full row padding-none margin-bottom-none\">\r\n                <div className=\"padding-none padding-right-half col-xs-10\">\r\n                  <input\r\n                    className=\"margin-bottom-none\"\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    placeholder={config.searchWidgetPlaceHolder}\r\n                    required\r\n                    spellCheck=\"false\"\r\n                  />\r\n                </div>\r\n                <div className=\"padding-none padding-left-half col-xs-2\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    <FontAwesomeIcon\r\n                      icon={[\"fas\", \"search\"]}\r\n                      style={{ color: \"#FFFFFF\" }}\r\n                    />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </WidgetContainer>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WidgetSearch;\r\n","import React from \"react\";\r\nimport WidgetCategory from \"./WidgetCategory\";\r\nimport WidgetTag from \"./WidgetTag\";\r\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\r\nimport WidgetLinks from \"./WidgetLinks\";\r\nimport WidgetSearch from \"./WidgetSearch\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\r\n  return (\r\n    <aside\r\n      className={`sidebar-container width-full ${\r\n        config.sidebarSticky ? \"height-full\" : \"\"\r\n      }`}\r\n    >\r\n      <WidgetSearch />\r\n\r\n      {latestPostEdges && (\r\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\r\n      )}\r\n\r\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\r\n\r\n      {tagList && <WidgetTag tagList={tagList} />}\r\n\r\n      {links && (\r\n        <div className=\"position-sticky top-zero\">\r\n          <WidgetLinks links={links} />\r\n        </div>\r\n      )}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport Header from \"../components/Header/Header\";\r\nimport MainContainer from \"../components/MainContainer/MainContainer\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport Pagination from \"../components/Pagination/Pagination\";\r\nimport { getPostList, getCategoryPath } from \"../utils/helpers\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nconst CategoryTemplate = ({ data, pageContext }) => {\r\n  const {\r\n    category,\r\n    categoryList,\r\n    tagList,\r\n    latestPostEdges,\r\n    currentPage,\r\n    totalPages,\r\n  } = pageContext;\r\n  const postEdges = data.allMarkdownRemark.edges;\r\n  const postList = getPostList(postEdges);\r\n  const content = (\r\n    <>\r\n      <PostListing\r\n        postList={postList}\r\n        hasThumbnail={config.categoryHasThumbnail}\r\n        hasLoadmore={false}\r\n      />\r\n      <Pagination\r\n        extraClass=\"margin-top padding-top-half\"\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        pathPrefix={getCategoryPath(category)}\r\n        pathPrefixPagination={config.pathPrefixPagination}\r\n      />\r\n    </>\r\n  );\r\n  const sidebar = (\r\n    <Sidebar\r\n      tagList={tagList}\r\n      categoryList={categoryList}\r\n      latestPostEdges={latestPostEdges}\r\n      links={config.sidebarLinks}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"category-container\">\r\n        <Helmet\r\n          title={`${config.categoryHeader} ${category} - ${config.siteTitle}`}\r\n        />\r\n        <Header title={`${config.categoryHeader} ${category}`} />\r\n        <MainContainer content={content} sidebar={sidebar} />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CategoryTemplate;\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`query CategoryPage($category: String, $skip: Int!, $limit: Int!) {\r\n  allMarkdownRemark(\r\n    limit: $limit\r\n    skip: $skip\r\n    sort: {fields: [frontmatter___date], order: DESC}\r\n    filter: {frontmatter: {categories: {in: [$category]}, template: {eq: \"post\"}}}\r\n  ) {\r\n    totalCount\r\n    edges {\r\n      node {\r\n        fields {\r\n          slug\r\n          date\r\n        }\r\n        excerpt\r\n        timeToRead\r\n        frontmatter {\r\n          title\r\n          tags\r\n          cover {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\r\n            }\r\n          }\r\n          date\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n"],"names":["content","sidebar","className","props","value","index","currentPage","pathPrefix","pathPrefixPagination","isLeft","isRight","to","AutoLink","activeClassName","icon","size","totalPages","extraClass","respArr","i","push","MAX_PAGINATION_ITEMS","map","key","post","cover","slug","title","G","image","getImage","alt","excerpt","substring","PostDate","date","hasThumbnail","PostListing","state","maxPosts","hasLoadmore","postsPerPage","postList","length","handleLoadmore","numberLoadmore","setState","prevState","render","this","onClick","btnLoadmore","Component","config","formatDate","children","getTagPath","categoryList","category","getCategoryPath","tagList","tag","latestPostEdges","getPostList","links","link","label","url","WidgetSearch","action","method","type","name","placeholder","required","spellCheck","style","color","WidgetLatestPosts","data","pageContext","postEdges","allMarkdownRemark","edges"],"sourceRoot":""}